# CI environment settings
language: java
jdk: openjdk11
dist: trusty
if: tag is blank

# Encrypted global secret variables (passwords and keys)
env:
  global:
    - DEV_BRANCH=master
    - PROD_BRANCH=production
    - secure: 4FwU7Ap/6xXZ7k+S7TDWtyeGKhEZmym+X0f4k6iO7vTYWRMJeDl07pFoPSPmA2HvjPT3lp7+sCtoXr0uFngRM1yKK6fuaMQrkORgV0lL8SsLlxPwzCtPOl8vB7szQ4qPCyTSm/EKMGwSSQbrc9GQ5/Rf/wza0Ucuvgu2IhDseN8Wz+taODcHuAHP4tvJv427Tf35MveT57V+YvMAUi5PYcvUJKMj60g7t7Ab1P6SCXHwIybAhOWOqza+m6NFtc7418bCgp07QqWi5kozFizMVabEu1HTCLJbKq0ND6FB94HEzgIcsAcMLXsVOfjKl4g1w6zUwNL/L5B/5QCWYcOanByAKvUS/QridsF4j2Xzt4ykIIvls2Y0ADh5cn65ZZjov3rYIHKcKEEx6suimOCKxm+vXMlggfaTioS+Di2XK8iuqv7fcFOfR0k95lco3ozkO0UBqWKHqXskKA8GZqbxtHF6D6xF5VyI2hPr4IlVQGzNUV9AMo6MS0fSjla64g9YqaUjYNOB+13W6Ygjg4QKT0G2Awazh08vqcoy2UrgF+artnQnbBUgK9MKzbROziTQ2toA+ItjzligVJqg/N+iidij6t2s5OvW9cNBtQNA2CyHbtiGds3XUzsd4Y5MzDgOFjmth6E8BGef0hxbyTsIeGiHZCHIALdnw2jvTa4jClk=
    - secure: 2mEm9JM4BaWhYJgJr4GU6SOmav2EGkprWggDu8VL4OC+U3CUwggn7f/gS9zIvsMT920vHYMtXME5uZ4xQX2J4d4K3wUm5R+fzATev0s50s3xw9XlfdDMHDrpXSxbRe+cU2M0PeG/x566mgokcVr9XvozbviwSi31kcra5TmM1Qyd2OVRPdT1fVNtD0HLqKaWOfZ8u00RzWjzJbcyjQ8rYTIxC6J8vq6aKBaBnkj1P30rOduxTgHP92Yf+k/KgAh7Z2K6gCo5ntxkqKtoZZjYQpQMaPn+hWQxNmPOW5wYQba6O4ydKQB4p/AYa0tZ2YsvdKXTT9ySLT2ryZ1Q63wwgS6PCiTsVYW5iuidQTH2Wl6gXXhx77hqeobppZYy3pJtE6CiYqtWZfW4QRF4ZzbPnxp9DOlo4B4pokIvQK/jhUCkjBZPdCigytJgHDYtoKRvkIMf2+5DXBpa44yW67WLMAtZnVIJqDllbiFpbiCR5UU+HaTDNJIVzX3yhihd/Y1fXb1W475kr7VdIR6/zs/ZoPjANTLonqpoQIcWrj3A/sTQgGjIg0gpogSBrXvL2Lb9QSKf/DfS0aWJlmb782YGuwxBTEuPvfrdHEi7wYq2sfndNbT+FQyQg6ikiy1K/7vcOlAX9+o+RpES14tdBmWzhMjo8Ik8WmmCOoiF9Yn2c6s=

# Stop all unused services to free some memory space
before_install:
  - sudo service postgresql stop || true
  - sudo service mysql stop || true
  - sudo service memcached stop || true
  - sudo service bootlogd stop || true
  - sudo service elasticsearch stop || true
  - sudo service mongodb stop || true
  - sudo service neo4j stop || true
  - sudo service cassandra stop || true
  - sudo service riak stop || true
  - sudo service rsync stop || true
  - sudo service x11-common stop || true
  
#(1) BUILD STAGE
# This stage is configured automaticaly by Travis CI
  
#(2) TEST STAGE

# Prepare and validate data before running anything 
before_script:
  # Print some GIT related variables
  - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
  - echo "TRAVIS_PULL_REQUEST = $TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_TAG = $TRAVIS_TAG"
  - echo "TRAVIS_BUILD_NUMBER = $TRAVIS_BUILD_NUMBER"
  - echo "TRAVIS_COMMIT = $TRAVIS_COMMIT"
  
  # Setup local git user
  - git config --local user.email "builds@travis-ci.com"
  - git config --local user.name "Travis CI"
  
  # Read and verify version
  - export PROJECT_VERSION=$(./gradlew -q printVersion)
  - ./scripts/verify-version
  
script:
  # Run tests with OpenJDK 11
  - ./gradlew check jacocoTestReport --rerun-tasks -x jar -x classes
  
  # Run tests with OpenJDK 8
  - jdk_switcher use openjdk8
  - ./gradlew check javadoc --rerun-tasks -x jar -x classes
  
  # Run tests with OracleJDK 8
  - jdk_switcher use oraclejdk8
  - ./gradlew check --rerun-tasks -x jar -x classes
  
after_success:
  # Enable OpenJDK 11 again
  - export JAVA_HOME=$HOME/openjdk11
  # Submit code coverage to codecov
  - bash <(curl -s https://codecov.io/bash)
  
#(3) DEPLOY STAGE

# Create release tag and extract changelog
before_deploy:
  - source ./scripts/create-release-tag
  - source ./scripts/extract-changelog
 
deploy:
  # All changes from master branch will be deployed to JFrog's OSS Artifactory repository
  - provider: script
    script: ./gradlew masterDeploy -x javadoc -x jar -x classes
    skip_cleanup: true
    on:
      branch: $DEV_BRANCH

  # Production branch will be deployed to Bintray repository and then if needed can be manually deployed to Maven Central
  - provider: script
    script: ./gradlew productionDeploy -x javadoc -x jar -x classes
    skip_cleanup: true
    on:
      branch: $PROD_BRANCH

  # Production branch will be also deployed to GitHub Releases
  - provider: releases
    edge: true
    token: $GITHUB_TOKEN
    name: $PROJECT_VERSION
    release_notes: $CHANGELOG
    file: ./build/libs/*
    cleanup: false
    on:
      branch: $PROD_BRANCH

#(4) RELEASE STAGE
# This is a manual stage, which can be trigger by creating a pull request in GitHub and manually running scripts/release command 

# Used to avoid uploading the cache after every build, see https://docs.travis-ci.com/user/languages/java/#Caching
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.m2/repositories/