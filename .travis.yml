# CI environment settings
language: java
jdk: openjdk11
dist: trusty

# Encrypted global secret variables (passwords and keys)
env:
  global:
    - DEV_BRANCH=master
    - PROD_BRANCH=production
    - secure: 4FwU7Ap/6xXZ7k+S7TDWtyeGKhEZmym+X0f4k6iO7vTYWRMJeDl07pFoPSPmA2HvjPT3lp7+sCtoXr0uFngRM1yKK6fuaMQrkORgV0lL8SsLlxPwzCtPOl8vB7szQ4qPCyTSm/EKMGwSSQbrc9GQ5/Rf/wza0Ucuvgu2IhDseN8Wz+taODcHuAHP4tvJv427Tf35MveT57V+YvMAUi5PYcvUJKMj60g7t7Ab1P6SCXHwIybAhOWOqza+m6NFtc7418bCgp07QqWi5kozFizMVabEu1HTCLJbKq0ND6FB94HEzgIcsAcMLXsVOfjKl4g1w6zUwNL/L5B/5QCWYcOanByAKvUS/QridsF4j2Xzt4ykIIvls2Y0ADh5cn65ZZjov3rYIHKcKEEx6suimOCKxm+vXMlggfaTioS+Di2XK8iuqv7fcFOfR0k95lco3ozkO0UBqWKHqXskKA8GZqbxtHF6D6xF5VyI2hPr4IlVQGzNUV9AMo6MS0fSjla64g9YqaUjYNOB+13W6Ygjg4QKT0G2Awazh08vqcoy2UrgF+artnQnbBUgK9MKzbROziTQ2toA+ItjzligVJqg/N+iidij6t2s5OvW9cNBtQNA2CyHbtiGds3XUzsd4Y5MzDgOFjmth6E8BGef0hxbyTsIeGiHZCHIALdnw2jvTa4jClk=
    - secure: 2mEm9JM4BaWhYJgJr4GU6SOmav2EGkprWggDu8VL4OC+U3CUwggn7f/gS9zIvsMT920vHYMtXME5uZ4xQX2J4d4K3wUm5R+fzATev0s50s3xw9XlfdDMHDrpXSxbRe+cU2M0PeG/x566mgokcVr9XvozbviwSi31kcra5TmM1Qyd2OVRPdT1fVNtD0HLqKaWOfZ8u00RzWjzJbcyjQ8rYTIxC6J8vq6aKBaBnkj1P30rOduxTgHP92Yf+k/KgAh7Z2K6gCo5ntxkqKtoZZjYQpQMaPn+hWQxNmPOW5wYQba6O4ydKQB4p/AYa0tZ2YsvdKXTT9ySLT2ryZ1Q63wwgS6PCiTsVYW5iuidQTH2Wl6gXXhx77hqeobppZYy3pJtE6CiYqtWZfW4QRF4ZzbPnxp9DOlo4B4pokIvQK/jhUCkjBZPdCigytJgHDYtoKRvkIMf2+5DXBpa44yW67WLMAtZnVIJqDllbiFpbiCR5UU+HaTDNJIVzX3yhihd/Y1fXb1W475kr7VdIR6/zs/ZoPjANTLonqpoQIcWrj3A/sTQgGjIg0gpogSBrXvL2Lb9QSKf/DfS0aWJlmb782YGuwxBTEuPvfrdHEi7wYq2sfndNbT+FQyQg6ikiy1K/7vcOlAX9+o+RpES14tdBmWzhMjo8Ik8WmmCOoiF9Yn2c6s=
    - secure: 0ariUS0JWcPx1wJS1fBccMyLhEVwZIVC5dJhPtbSsbDU0PAD3215fVZO6hkR2WS9JRtt9g+oN0WM0QeOef4eEnxunhyJxYgem9xjElR9KogtIJiIV83exDHLh+RzlFkfSVPnBAlGSH90jKvWt17RYKkNJb6ebzgLBCdyur46ye4+A9SJe031kDwOo+gswJiza9lH92dgH4Nlf5dwRWHSFfuZVwPD+MjWLubs9b3hCWLkOwIXYUeqiOgV8cr3m5fKzLMwI3+wzG6YauGa9EK2nZXPWofurOLByMOnunKafVCDN8+KUks6TWlFjoJ36JE4Gp3QdaacGiWH8n3ff8UaqexWNoAzOt7/+DxgWeg+qdMWlObBsUxWvPpRCo+NQiwFMbgwg7Jcg3F9qtEyl7ji2YNrzHjFzPyVSEiGJET/OeXidPIRPABJqIvx/T6DsZkiHXcto9ulcDYwUCPkhqEk0Hlpqe6PfNShSNXWg3m5vyjUqQ6A7dhgzKT9trWeiE0KrFYCFaaYtqSfrmW2Jio+ELvw/9S7TQzO/xnfDjKpcURi8sudm/lluNw8e2yIInEd5mqu9NAAT0ORrXzzdubJWveIr8vKum41GUwF1o0zAGMor4judWTd0fqNKYxFCJpkA4WVDrpsX5nRwDDhUBFVFv6w2KSTGvldo9qXcaFkMUY=
    - secure: cnasjoFLD6hzaJaEQvoPWX4/cgQ2kFtxZmTEzQ2fzKoeTQsM6UBQC7wVL2BizxRoPSyqNXVCiMeB5u1WZ7mcZyka6iUINafkSHGm2yQckC+tXGqLlxrVyFMUm1Djsq9TcqNKOMkR0y1kjcvUctW44O6P/94WycOdXoItR+8x9rlE2f8AhGnhdSr+9p7FWS0igIsqHw3b+nOBdJtrqWASu9bO7hobGbCcELahuPOK8XzuwcQRE/kJkxiZV1X48nm5Q9t2Z4NsffvVmIsDFl5V6n4EqfYY2vtxFfWGnuw2uDQyhW70vFJ+tPpHWZi+X7MxKfbrVlKjSvWoBeBFv5D4fNnfgAjPfJbv1ylZZv/txYdnaT0Xpqyhz1CPgx3xVuA9t51kWxGa2qajHp8K/DH15JAbbZBSAGENBS6pJVg/3WpYH4krCA2s85WLsPV8+aDm8x+9EWi9hTM8HYS8wbCNfyAkRSMC6dvSyle2345y9gsSO5azKnvXUQBdaeuOaITxKHdq/nsGo/tpIx2jmm1SvgtzwM8iVp8W6RWFyNNFRZPxG2pd3wEzC/0MlG42bC6t28OjRwNVR39DAa4kkRjL5DnpmWLsZRqqdngl6UTW6P6vGyXUu2zX+yMAYRM6HynR6KjBfgBnTwhaGui7iCv/FVa9fW06pD7UTlie3EON0D0=

# Stop all unused services to free some memory space
before_install:
  - sudo service postgresql stop || true
  - sudo service mysql stop || true
  - sudo service memcached stop || true
  - sudo service bootlogd stop || true
  - sudo service elasticsearch stop || true
  - sudo service mongodb stop || true
  - sudo service neo4j stop || true
  - sudo service cassandra stop || true
  - sudo service riak stop || true
  - sudo service rsync stop || true
  - sudo service x11-common stop || true
  
# BUILD STAGE

# This stage is configured automaticaly by Travis CI
  
# TEST STAGE

script:
  # Run tests with OpenJDK 11
  - ./gradlew check jacocoTestReport --rerun-tasks -x jar -x classes
  
  # Run tests with OpenJDK 8
  - jdk_switcher use openjdk8
  - ./gradlew check javadoc --rerun-tasks -x jar -x classes
  
  # Run tests with OracleJDK 8
  - jdk_switcher use oraclejdk8
  - ./gradlew check --rerun-tasks -x jar -x classes
  
after_success:
  # Enable OpenJDK 11 again
  - export JAVA_HOME=$HOME/openjdk11
  # Submit code coverage to codecov
  - bash <(curl -s https://codecov.io/bash)
  
# DEPLOY STAGE

before_deploy:
  # Verify version
  - ./gradlew verifyVersion
  # Set up git user name and tag production commit
  - |
    if [[ "$TRAVIS_BRANCH" == "$PROD_BRANCH" && "$TRAVIS_PULL_REQUEST" == "false" && -z "$TRAVIS_TAG" ]]; then
      export TRAVIS_TAG=$(./gradlew -q projectVersion);
      git config --local user.email "builds@travis-ci.com";
      git config --local user.name "Travis CI";
      git tag "$TRAVIS_TAG" -a -m "Generated tag from TravisCI";
    fi
  # Print some GIT related variables
  - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
  - echo "TRAVIS_PULL_REQUEST = $TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_TAG = $TRAVIS_TAG"
  - echo "TRAVIS_BUILD_NUMBER = $TRAVIS_BUILD_NUMBER"
  - echo "TRAVIS_COMMIT = $TRAVIS_COMMIT"
  
deploy:
  # All changes from master branch will be deployed to JFrog's OSS Artifactory repository
  - provider: script
    script: ./gradlew masterDeploy -x javadoc -x jar -x classes
    skip_cleanup: true
    on:
      branch: $DEV_BRANCH

  # Production branch will be deployed to Bintray repository and then if needed can be manually deployed to Maven Central
  - provider: script
    script: ./gradlew productionDeploy -x javadoc -x jar -x classes
    # TODO:
    # 1) add tag to GH
    # 3) upload artifacts to GH
    # 4) update release notes on GH
    # 5) verify Javadoc access 
    skip_cleanup: true
    on:
      branch: $PROD_BRANCH

  # Production branch will be also deployed to GitHub Releases
  - provider: releases
    api_key: $GITHUB_TOKEN
    skip_cleanup: true
    draft: true
    on:
      branch: $PROD_BRANCH

# RELEASE STAGE

# This is a manual stage, which can be trigger by creating a pull request in GitHub repository

# Used to avoid uploading the cache after every build, see https://docs.travis-ci.com/user/languages/java/#Caching
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.m2/repositories/